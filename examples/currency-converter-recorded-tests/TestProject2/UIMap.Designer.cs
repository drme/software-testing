// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestProject2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfEdit uITextBox2Edit = this.UICurrencyconverterWindow.UITextBox2Edit;
            WpfEdit uITextBox1Edit = this.UICurrencyconverterWindow.UITextBox1Edit;
            WpfRadioButton uIEURRadioButton = this.UICurrencyconverterWindow.UIEURRadioButton;
            WpfButton uIConvertButton = this.UICurrencyconverterWindow.UIConvertButton;
            #endregion

            // Type '10' in 'textBox2' text box
            uITextBox2Edit.Text = this.RecordedMethod1Params.UITextBox2EditText;

            // Click 'textBox1' text box
            Mouse.Click(uITextBox1Edit, new Point(27, 6));

            // Select 'EUR' radio button
            uIEURRadioButton.Selected = this.RecordedMethod1Params.UIEURRadioButtonSelected;

            // Click 'Convert' button
            Mouse.Click(uIConvertButton, new Point(28, 11));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WpfEdit uITextBox1Edit = this.UICurrencyconverterWindow.UITextBox1Edit;
            #endregion

            // Verify that 'textBox1' text box's property 'Text' equals '2,890173'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBox1EditText, uITextBox1Edit.Text);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UICurrencyconverterWindow UICurrencyconverterWindow
        {
            get
            {
                if ((this.mUICurrencyconverterWindow == null))
                {
                    this.mUICurrencyconverterWindow = new UICurrencyconverterWindow();
                }
                return this.mUICurrencyconverterWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UICurrencyconverterWindow mUICurrencyconverterWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'textBox2' text box
        /// </summary>
        public string UITextBox2EditText = "10";
        
        /// <summary>
        /// Select 'EUR' radio button
        /// </summary>
        public bool UIEURRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'textBox1' text box's property 'Text' equals '2,890173'
        /// </summary>
        public string UITextBox1EditText = "2,890173";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICurrencyconverterWindow : WpfWindow
    {
        
        public UICurrencyconverterWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Currency converter";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Currency converter");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextBox2Edit
        {
            get
            {
                if ((this.mUITextBox2Edit == null))
                {
                    this.mUITextBox2Edit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextBox2Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "textBox2";
                    this.mUITextBox2Edit.WindowTitles.Add("Currency converter");
                    #endregion
                }
                return this.mUITextBox2Edit;
            }
        }
        
        public WpfEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextBox1Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "textBox1";
                    this.mUITextBox1Edit.WindowTitles.Add("Currency converter");
                    #endregion
                }
                return this.mUITextBox1Edit;
            }
        }
        
        public WpfRadioButton UIEURRadioButton
        {
            get
            {
                if ((this.mUIEURRadioButton == null))
                {
                    this.mUIEURRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIEURRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "radioButton1";
                    this.mUIEURRadioButton.WindowTitles.Add("Currency converter");
                    #endregion
                }
                return this.mUIEURRadioButton;
            }
        }
        
        public WpfButton UIConvertButton
        {
            get
            {
                if ((this.mUIConvertButton == null))
                {
                    this.mUIConvertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIConvertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "button1";
                    this.mUIConvertButton.WindowTitles.Add("Currency converter");
                    #endregion
                }
                return this.mUIConvertButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextBox2Edit;
        
        private WpfEdit mUITextBox1Edit;
        
        private WpfRadioButton mUIEURRadioButton;
        
        private WpfButton mUIConvertButton;
        #endregion
    }
}
